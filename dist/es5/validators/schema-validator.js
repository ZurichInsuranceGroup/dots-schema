"use strict";
var _ = require('lodash');
var composed_validation_result_1 = require('../composed-validation-result');
var schema_1 = require('../schema');
var cleaned_1 = require('../cleaned');
var SchemaValidator = (function () {
    function SchemaValidator() {
    }
    SchemaValidator.getValidatorsForKey = function (key, definition, options, object) {
        return {
            type: cleaned_1.cleaned(SchemaValidator.RULES.type, key, definition, options),
            schema: cleaned_1.cleaned(SchemaValidator.RULES.schema, key, definition, options)
        };
    };
    SchemaValidator.clean = function (definition, value, options, object) {
        var schema = definition.type;
        return schema.clean(value, options);
    };
    SchemaValidator.RULES = {
        type: function (value, key, definition) {
            if ((typeof value !== 'undefined' && value !== null) && (!(_.isObject(value) || _.isArray(value)))) {
                return {
                    property: key,
                    rule: 'type',
                    message: "Property " + key + " must be an Object or an Array of Objects"
                };
            }
            return null;
        },
        schema: function (value, key, definition, options) {
            if (value instanceof schema_1.Schema || typeof value === 'object') {
                var schema = definition.type;
                var result = new composed_validation_result_1.ComposedValidationResult();
                result.and(schema.validate(value, options), key);
                return result;
            }
            return null;
        }
    };
    return SchemaValidator;
}());
exports.SchemaValidator = SchemaValidator;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZhbGlkYXRvcnMvc2NoZW1hLXZhbGlkYXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsSUFBWSxDQUFDLFdBQU0sUUFFbkIsQ0FBQyxDQUYwQjtBQVEzQiwyQ0FBeUMsK0JBQ3pDLENBQUMsQ0FEdUU7QUFDeEUsdUJBQXVCLFdBQ3ZCLENBQUMsQ0FEaUM7QUFDbEMsd0JBQXdCLFlBRXhCLENBQUMsQ0FGbUM7QUFFcEM7SUFBQTtJQW9DQSxDQUFDO0lBWmlCLG1DQUFtQixHQUFqQyxVQUFrQyxHQUFXLEVBQUUsVUFBZ0MsRUFBRSxPQUEwQixFQUFFLE1BQVk7UUFDckgsTUFBTSxDQUFDO1lBQ0gsSUFBSSxFQUFFLGlCQUFPLENBQUMsZUFBZSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsR0FBRyxFQUFFLFVBQVUsRUFBRSxPQUFPLENBQUM7WUFDbkUsTUFBTSxFQUFFLGlCQUFPLENBQUMsZUFBZSxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUUsR0FBRyxFQUFFLFVBQVUsRUFBRSxPQUFPLENBQUM7U0FDMUUsQ0FBQTtJQUNMLENBQUM7SUFFYSxxQkFBSyxHQUFuQixVQUFvQixVQUFnQyxFQUFFLEtBQVUsRUFBRSxPQUFxQixFQUFFLE1BQVc7UUFDaEcsSUFBTSxNQUFNLEdBQVcsVUFBVSxDQUFDLElBQWMsQ0FBQTtRQUNoRCxNQUFNLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUE7SUFDdkMsQ0FBQztJQWhDYSxxQkFBSyxHQUFHO1FBQ2xCLElBQUksRUFBRSxVQUFDLEtBQVUsRUFBRSxHQUFXLEVBQUUsVUFBZ0M7WUFDNUQsRUFBRSxDQUFDLENBQUMsQ0FBQyxPQUFPLEtBQUssS0FBSyxXQUFXLElBQUksS0FBSyxLQUFLLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNqRyxNQUFNLENBQUM7b0JBQ0gsUUFBUSxFQUFFLEdBQUc7b0JBQ2IsSUFBSSxFQUFFLE1BQU07b0JBQ1osT0FBTyxFQUFFLGNBQVksR0FBRyw4Q0FBMkM7aUJBQ3RFLENBQUE7WUFDTCxDQUFDO1lBQ0QsTUFBTSxDQUFDLElBQUksQ0FBQTtRQUNmLENBQUM7UUFDRCxNQUFNLEVBQUUsVUFBQyxLQUFVLEVBQUUsR0FBVyxFQUFFLFVBQWdDLEVBQUUsT0FBMEI7WUFDMUYsRUFBRSxDQUFDLENBQUMsS0FBSyxZQUFZLGVBQU0sSUFBSSxPQUFPLEtBQUssS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDO2dCQUN2RCxJQUFNLE1BQU0sR0FBVyxVQUFVLENBQUMsSUFBYyxDQUFBO2dCQUNoRCxJQUFNLE1BQU0sR0FBRyxJQUFJLHFEQUF3QixFQUFFLENBQUE7Z0JBQzdDLE1BQU0sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUUsT0FBTyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUE7Z0JBQ2hELE1BQU0sQ0FBQyxNQUFNLENBQUE7WUFDakIsQ0FBQztZQUNELE1BQU0sQ0FBQyxJQUFJLENBQUE7UUFDZixDQUFDO0tBQ0osQ0FBQTtJQWNMLHNCQUFDO0FBQUQsQ0FwQ0EsQUFvQ0MsSUFBQTtBQXBDWSx1QkFBZSxrQkFvQzNCLENBQUEiLCJmaWxlIjoidmFsaWRhdG9ycy9zY2hlbWEtdmFsaWRhdG9yLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgXyBmcm9tICdsb2Rhc2gnXG5cbmltcG9ydCB7XG4gICAgVmFsaWRhdGlvbkRlZmluaXRpb24sXG4gICAgVmFsaWRhdGlvblJlc3VsdCxcbiAgICBWYWxpZGF0aW9uT3B0aW9ucyxcbiAgICBDbGVhbk9wdGlvbnNcbn0gIGZyb20gJy4uL2ludGVyZmFjZXMnXG5pbXBvcnQgeyBDb21wb3NlZFZhbGlkYXRpb25SZXN1bHQgfSBmcm9tICcuLi9jb21wb3NlZC12YWxpZGF0aW9uLXJlc3VsdCdcbmltcG9ydCB7IFNjaGVtYSB9IGZyb20gJy4uL3NjaGVtYSdcbmltcG9ydCB7IGNsZWFuZWQgfSBmcm9tICcuLi9jbGVhbmVkJ1xuXG5leHBvcnQgY2xhc3MgU2NoZW1hVmFsaWRhdG9yIHtcblxuICAgIHB1YmxpYyBzdGF0aWMgUlVMRVMgPSB7XG4gICAgICAgIHR5cGU6ICh2YWx1ZTogYW55LCBrZXk6IHN0cmluZywgZGVmaW5pdGlvbjogVmFsaWRhdGlvbkRlZmluaXRpb24pID0+IHtcbiAgICAgICAgICAgIGlmICgodHlwZW9mIHZhbHVlICE9PSAndW5kZWZpbmVkJyAmJiB2YWx1ZSAhPT0gbnVsbCkgJiYgKCEoXy5pc09iamVjdCh2YWx1ZSkgfHwgXy5pc0FycmF5KHZhbHVlKSkpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgcHJvcGVydHk6IGtleSxcbiAgICAgICAgICAgICAgICAgICAgcnVsZTogJ3R5cGUnLFxuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiBgUHJvcGVydHkgJHtrZXl9IG11c3QgYmUgYW4gT2JqZWN0IG9yIGFuIEFycmF5IG9mIE9iamVjdHNgXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG51bGxcbiAgICAgICAgfSxcbiAgICAgICAgc2NoZW1hOiAodmFsdWU6IGFueSwga2V5OiBzdHJpbmcsIGRlZmluaXRpb246IFZhbGlkYXRpb25EZWZpbml0aW9uLCBvcHRpb25zOiBWYWxpZGF0aW9uT3B0aW9ucykgPT4ge1xuICAgICAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgU2NoZW1hIHx8IHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBzY2hlbWE6IFNjaGVtYSA9IGRlZmluaXRpb24udHlwZSBhcyBTY2hlbWFcbiAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSBuZXcgQ29tcG9zZWRWYWxpZGF0aW9uUmVzdWx0KClcbiAgICAgICAgICAgICAgICByZXN1bHQuYW5kKHNjaGVtYS52YWxpZGF0ZSh2YWx1ZSwgb3B0aW9ucyksIGtleSlcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbnVsbFxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIHN0YXRpYyBnZXRWYWxpZGF0b3JzRm9yS2V5KGtleTogc3RyaW5nLCBkZWZpbml0aW9uOiBWYWxpZGF0aW9uRGVmaW5pdGlvbiwgb3B0aW9uczogVmFsaWRhdGlvbk9wdGlvbnMsIG9iamVjdD86IGFueSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdHlwZTogY2xlYW5lZChTY2hlbWFWYWxpZGF0b3IuUlVMRVMudHlwZSwga2V5LCBkZWZpbml0aW9uLCBvcHRpb25zKSxcbiAgICAgICAgICAgIHNjaGVtYTogY2xlYW5lZChTY2hlbWFWYWxpZGF0b3IuUlVMRVMuc2NoZW1hLCBrZXksIGRlZmluaXRpb24sIG9wdGlvbnMpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIGNsZWFuKGRlZmluaXRpb246IFZhbGlkYXRpb25EZWZpbml0aW9uLCB2YWx1ZTogYW55LCBvcHRpb25zOiBDbGVhbk9wdGlvbnMsIG9iamVjdDogYW55KTogYW55IHtcbiAgICAgICAgY29uc3Qgc2NoZW1hOiBTY2hlbWEgPSBkZWZpbml0aW9uLnR5cGUgYXMgU2NoZW1hXG4gICAgICAgIHJldHVybiBzY2hlbWEuY2xlYW4odmFsdWUsIG9wdGlvbnMpXG4gICAgfVxuXG59XG4iXX0=
